#!/bin/bash
#############################################################################################
#  Installations-Skript für den Linuxclient
#  jesko.anschuetz@linuxmuster.net
#  10.07.2014
#  GPL v3
#############################################################################################

#############################################################################################
#  Dieses Skript zusammen mit
# - name.cloop-Datei
# - name.cloop.postsync-Datei
# - name.cloop.desc
# - name.cloop.torrent
# - name.cloop.info
# - name.cloop.macct
# - start.conf.name
# in ein Verzeichnis legen und starten.
# NICHT VERGESSEN: linbodir anpassen, damit es im "live-system" passiert


linbodir="/tmp/var/linbo"



############################################################################
# Es sollte IN ALLER REGEL keine Notwendigkeit für Änderungen geben...     #
# Ändere also nur, wenn du genau weißt, was du tust!                       #
############################################################################

if [[ ! "$USER" == "root" ]]
then
  echo "Dieses Skript muss als root laufen. ...Abbruch"
  exit 1
fi
clear


# wie heißt das Verzeichnis unter /var/linbo, wo der universal-
# postsync Baum liegt?  (wird in den allermeisten Installationen
# unverändert bleiben - nachsehen in der mitgelieferten .cloop.postsync)

universalpostsyncdir="linuxmuster-client"


# Ohne das Linbo-Verzeichnis macht das ganze Skript keinen Sinn... also prüfen und ggf. abbrechen.

if [[ ! -d ${linbodir} ]]
then
  echo "Linboverzeichnis existiert nicht. Bitte Skript ($0) richtig konfigurieren."
  echo -e "...Abbruch\n\n"
  exit 1
fi


# Automatische Konfiguration versuchen. Dazu darf nur genau eine .cloop Datei mit im Verzeichnis liegen.
# Wenn das nicht der Fall ist, abbrechen.

if [[ $(ls *.cloop | wc -l) != 1 ]]
then
  echo "Es gibt keine oder mehr als eine .cloop-Datei in diesem Verzeichnis. Das kann nicht gewollt sein."
  echo "Abbruch..."
  exit 1
fi


# Namen der cloop-Datei ermitteln, wenn nicht weiter oben schon manuell mitgeteilt
if [[ "$cloopfile" == "" ]]
then
  cloop=*.cloop
  cloopfile=$(echo $cloop)
fi


# Das selbe für die Start.conf Datei. Sie muss so heißen, wie die cloop-Datei (start.conf.NAME_OHNE_".cloop")
if [[ "$startconffile" == "" ]]
then
  startconffile=start.conf.${cloopfile%.cloop}
fi

# Die Postsync-Datei MUSS so heißen, wie die cloop-Datei mit .postsync dahinter.
postsyncfile="${cloopfile}.postsync"



# zu kopierende Dateien: (Default ist cloop, info, desc, macct, torrent, startconf und postsync-datei) 
filestolinbo="${cloopfile} ${cloopfile}.desc ${cloopfile}.info ${cloopfile}.macct ${cloopfile}.torrent ${startconffile} ${postsyncfile}"

# aus dem Postsync-Skript wird die Patchklasse ermittelt.

patchclass=$(grep "PATCHCLASS=" "${postsyncfile}" | cut -d"=" -f2 | sed 's/"//g')


echo "Zusammenfassung:"
echo "----------------"
echo "start.conf: $startconffile"
echo "patchclass: $patchclass"
echo "files to linbo: $filestolinbo"



# Dateien ins Linboverzeichnis kopieren
for file in ${filestolinbo}
do
  if [[ ! "${file}" == "" ]]
  then  # wenn eine Datei übergeben worden ist: prüfen, ob sie existiert und ob das Ziel schon existiert und im Fall zur
	# Sicherheit mit Zeitstempel versehen.
	if [[ -e "${file}" ]]
	then
	  if [[ -e "${linbodir}/${file}" ]]
	  then
	      LINDIRBACKUP=1 # Flag für Meldung am Ende
	      echo -n -e "${file} existiert. \e[01;33mSicherungskopie...\e[00m"
	      cp "${linbodir}/${file}" "${linbodir}/${file}".$(date +"%Y%m%d%H%M%S") && echo -e "\e[01;32m\t\t...OK.\e[00m" || echo -e "\e[00;31m ...failed\e[00m"
	  fi

	  # Datei kopieren und Rechte anpassen
	  echo -n "Kopiere ${file} nach ${linbodir}/"
	  cp "${file}" "${linbodir}/${file}" && echo -e "\e[01;32m\t\t...OK.\e[00m" || echo -e "\e[00;31m ...failed\e[00m"
	  echo -n "setze Dateirechte von ${file}"
	  chown root:root "${linbodir}/${file}" || echo -e "\e[00;31m...failed\e[00m"
	  chmod 664 "${linbodir}/${file}"  && echo -e "\e[01;32m\t...OK.\e[00m" || echo -e "\e[00;31m ...failed\e[00m"
	else
	  echo -e "\e[00;31m ${file} fehlt zu Installation... bitte Konfiguration überprüfen.\e[00m"
	  if [[ -e "${linbodir}/${file}" ]]
	  then
		echo -e "\e[01;32mDie Datei ist allerdings in ${linbodir} schon vorhanden. Wenn das Absicht war, ist alles gut.\e[00m"
	  fi
	fi
  else
	# wenn aus welchen Gründen auch immer kein $file übergeben wurde...
	 echo "nichts zu tun..."
  fi
done

# Postsync-Baum kopieren... vorher Sicherung erstellen von vorhandenem Verzeichnisbaum
if [[ -e "${linbodir}/${universalpostsyncdir}/${patchclass}" ]]
	then
	  POSTSYNCBACKUP=1  # Flag für Meldung am Ende.
	  echo -n -e "Postsync-Baum existiert. \e[01;33mSicherungskopie...\e[00m"
	  mv "${linbodir}/${universalpostsyncdir}/${patchclass}" "${linbodir}/${universalpostsyncdir}/${patchclass}".$(date +"%Y%m%d%H%M%S") && echo -e "\e[01;32m\t...OK.\e[00m" || echo -e "\e[00;31m ...failed\e[00m"
	fi

	# Verzeichnisbaum erstellen
	mkdir -p "${linbodir}/${universalpostsyncdir}/${patchclass}/common"
	echo Kopiere Postsync-Baum...
	cp -r common "${linbodir}/${universalpostsyncdir}/${patchclass}"

	[[ "$LINDIRBACKUP" == "1" ]] && echo -e "\e[00;31mEs wurden schon vorhandene Dateien mit Zeitstempel gesichert. Bitte in ${linbodir} nachsehen. \e[00m"
	[[ "$POSTSYNCBACKUP" == "1" ]] && echo -e "\e[00;31mDer ursprüngliche Postsync-Verzeichnisbaum unter ${linbodir}/${universalpostsyncdir}/${patchclass} wurde mit Zeitstempel gesichert. Bitte prüfen, ob wichtige Dateien in den aktuellen Baum kopiert werden müssen. \e[00m"

	echo fertig
